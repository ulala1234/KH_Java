# 22/03/04(금) <프로그래밍 언어 응용>(학원 평가일정 기준)

### 이클립스 - Java361 - day0304 - Ex01Scanner

```java
package day0304;
// 자바에서는 입력을 처리할 때 여러가지 방법을 통해서 처리해줄 수 있다.
// 하지만 우리는 그 중에서 가장 사용법이 간단한 Scanner 클래스를 사용한
// 입력 방법을 배워볼 것이다.
// 단, 우리가 클래스에서 특별한 과정 없이 쓸 수 있는 "외부 클래스"는
// 기본형 데이터타입을 클래스화 시켜놓은 포장 클래스(Wrapper Class)만
// 사용 가능하기 때문에
// 기본형 데이터타입과 상관 없는 Scanner 클래스를
// 우리 클래스에서 사용하기 위해서는(외부 클래스 중 바로 쓸 수 없는 것이니)
// 특별히 어디서 해당 클래스를 "수입"해와야 하는지
// 코드로 적어주어야 한다!

// 수입하는 방법은 다음과 같다.
// import 수입할 클래스
// 단, import 코드는 public class ~~~~ 이전에 나와야 하고(package 쪽)
// 필요에 따라서는 여러 개의 클래스를 임포트 해야할 수도 있다.

// Scanner 클래스를 import해라
import java.util.Scanner;

public class Ex01Scanner {
    public static void main(String[] args) {
        // Scanner 클래스 변수를 선언하고 초기화해보자
        Scanner scanner = new Scanner(System.in);
        // 위 코드에서 new Scanner(System.in)은
        // Scanner 클래스 변수를 초기화할 때 쓰이는 코드인데
        // () 안에 System.in은 해당 스캐너 클래스 변수가
        // 어디서 데이터를 읽어올지 지정하는 부분이다.
        // System.in은 (사용자의) 키보드 입력을 지칭한다!
        
        // (스캐너의 메소드를 통해 입력받기)
        // 1. 스캐너 클래스 변수를 사용하여
        //    정수 입력을 받는 방법
        System.out.println("1. 정수 입력");
        System.out.println("정수를 입력해주세요.");
        System.out.print("> ");
        // 스캐너 클래스 변수의 nextInt()를 사용하면
        // 우리가 정수 입력을 받을 수 있다.
        // (콘솔창 깜빡거림. 여기에 숫자 넣고 엔터 눌러야 밑의 내용 출력됨)
        int number = scanner.nextInt();
        
        System.out.printf("사용자가 입력한 정수: [%d]\n", number);
        
        System.out.println("-----------------------\n");
        
        
        System.out.println("2. 실수 입력");
        // 실수를 입력 받을 때에는
        // nextDouble()을 사용하면 된다.
        System.out.println("실수를 입력해주세요."); 
        System.out.print("> ");
        
        double d = scanner.nextDouble();
        
        System.out.printf("사용자가 입력한 실수: [%.2f]\n", d);
        
        System.out.println("-----------------------\n");
        
        
        System.out.println("3. 스트링 입력");
        // 스트링 입력을 받을 때에는
        // nextLine()을 사용하면 된다.
        // 단, nextInt(), nextDouble()과 같은
        // 숫자를 입력받는 메소드 실행 후에는
        // 반드시 nextLine()을 한번 더 적어야 한다.
        // 즉 스캐너 버그 방지용 nextLine() 한번, 
        // 실제 값을 입력 받는 nextLine() 한번
        // 두 번을 적어야 한다.
        System.out.println("사용자 이름을 입력해주세요."); 
        System.out.print("> ");
        scanner.nextLine();
        String name = scanner.nextLine();
        
        System.out.printf("사용자의 이름: [%s]\n", name);
        
        System.out.println("-----------------------\n");
    }
}
```

### 이클립스 - Java361 - day0304 - Ex02GradeBook

```java
package day0304;
// 사용자로부터 번호, 이름, 영어 점수, 수학 점수, 국어 점수를

// 차례대로 입력 받아서
// 다음과 같은 양식으로 출력되는 프로그램을 작성하시오.

// 결과)
// 번호: 0##번 이름: ###
// 국어: 0##점 영어: 0##점 수학: 0##점
// 총점: 0##점 평균: 0##.##점
// 5시 10분까지

import java.util.Scanner;

public class Ex02GradeBook {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // 과목의 개수를 저장한 상수
        final int SUBJECT_SIZE = 3;

        // (단계별로 쪼개기)
        // 입력

        // 1. 번호 입력
        // 1-1. 번호를 저장할 int 변수 선언
        int id;

        // 1-2. 사용자한테서 int 값 입력을 받아
        // int 변수에 저장
        System.out.println("번호를 입력해주세요.");
        System.out.print("> ");
        id = scanner.nextInt();

        // 2. 이름 입력
        // 2-1. 이름을 저장할 변수 선언
        String name;

        // 2-2. Scanner 클래스 버그 방지용 nextLine()
        // (그래야 스트링 입력을 받을 수 있음)
        scanner.nextLine();

        // 2-3. 사용자로부터 입력 받은 String 값을 name에 저장
        System.out.println("이름을 입력해주세요.");
        System.out.print("> ");
        name = scanner.nextLine();

        // 3. 영어 점수 입력
        // 3-1. 영어 점수를 저장할 변수
        int english;

        // 3-2. 사용자가 입력한 int값을 변수에 저장
        System.out.println("영어 점수를 입력해주세요.");
        System.out.print("> ");
        english = scanner.nextInt();

        // 4. 수학 점수 입력
        // 4-1. 수학 점수를 저장할 변수를 선언하고 사용자가 입력한 int 값을 변수에 저장
        System.out.println("수학 점수를 입력해주세요.");
        System.out.print("> ");
        int math = scanner.nextInt();

        // 5. 국어 점수 입력
        // 5-1. 수학 점수를 저장할 변수를 선언하고 사용자가 입력한 int 값을 변수에 저장*(선언과 초기화 과정 합쳐도 됨)*
        System.out.println("국어 점수를 입력해주세요.");
        System.out.print("> ");
        int korean = scanner.nextInt();

        // 출력
        *// printf("형식", 변수나 값)*

        // 1. 번호: 0##번 이름: ### 을 담당하는 printf()
        System.out.printf("번호: %03d번 이름: %s\n", id, name);

        // 2. 국어: 0##점 영어: 0##점 수학: 0##점 을 담당하는 printf()
        System.out.printf("국어: %03d점 영어: %03d점 수학: %03d점\n", korean, english, math);

        // 3. 총점: 0##점 평균: 0##.##점 을 담당하는 printf()
        // 3-1. 총점을 담당할 변수를 선언하고 총점을 계산하여 저장한다.
        int sum = korean + english + math;

        // 3-2. 평균을 담당할 변수를 선언하고 평균을 계산하여 저장한다.
        // 평균에서 나누는 값이 3이면 int / int라 소숫점이 안 나온다.(몫만 나와서)
        // int / double 하면 실수값이 나오니 3.0이라고 써야 한다. -> 하드코딩
        // 소프트코딩 -> 상수로 과목의 개수를 저장한다. 명시적 형변환을 한다. 
        double average = sum / (double) SUBJECT_SIZE;

        System.out.printf("총점: %03d점 평균: %06.2f점\n", sum, average);
    }
}
```

- 소프트 코딩 지향
    - 하드코딩: 딱딱한 코딩
    - 소프트코딩: 유연한 코딩(변경하기 쉬움)
        - 매직넘버(갑자기 튀어나온 숫자값) 없애기

### 이클립스 - Java361 - day0304 - Ex03If01

```java
package day0304;
// 제어문(Control Statement)

// 제어문이란 특정 코드의 실행 여부 혹은 반복 여부를 결정하는 특수한 코드로써,
// 프로그래밍에서 가장 중요한 개념 중 하나이다.

// 제어문에는 크게 조건문과 반복문 두가지가 있다.
// 조건문: 특정 조건이 맞으면 코드를 실행
// 반복문: 특정 조건이 맞는 동안 코드를 반복

// 조건식
// 조건식은 결과값이 true 혹은 false의 boolean 데이터타입의 값이 나오는
// 코드로써 주로 조건문 혹은 반복문에서 코드의 실행여부 또는 반복여부를 결정하는데 사용된다.
// 단순히 비교연산자 혹은 논리연산자만 사용하는 것이 아니라
// equals()와 같이 결과값이 boolean이면 뭐든 사용할 수 있다.

// 코드 블락*(block: 구역)*
// 코드 블락이란 한개의 중괄호*({})* 안에 있는 모든 코드들을
// 코드 블락이라고 한다.
// 코드 블락 안에는 다른 여러개의 코드 블락이 들어올 수 있으며
// 해당 여러개의 코드 블락을 우리는 "자식" 코드 블락 이라고도 표현한다.
// 또한 해당 자식 코드 블락들은 부모 코드 블락의 코드로 취급이 된다.

// 변수의 유효범위(Scope)
// 변수의 경우, 유효범위라는 것이 설정되어 있으며
// 해당 유효 범위를 벗어나면, 더이상 그 변수는 존재하지 않는 것으로 취급이 된다.
// 또한, 해당 변수가 유효한 범위 안에서는 똑같은 이름의 변수는 선언할 수 없다.
// 변수가 유효한 범위는 해당 변수를 선언한 이후부터
// 그 변수가 속해있는 코드 블락이 끝나기 전까지이다.
// ({}(코드 블락) 범위 중요: 변수 선언 유효 범위이기 때문)

// 조건문 01
// if 조건문
// if 조건문은 특정 조건식이 
// true가 나오면 연결되어 있는 코드 블락을 실행시키고,
// 만약 false가 나오면 해당 코드 블락을 무시하는 제어문이다.
// if 조건문은 기본적으로 다음과 같은 구조를 가지고 있다.
// if(조건식) {
//      조건식이 참일 때 실행할 코드들
// }

public class Ex03If01 {
    public static void main(String[] args) {

        // 조건식에서 사용할 int 변수 선언 및 초기화
        int number = 5;

        // 만약 number가 0보다 크거나 같으면
        // "자연수입니다" 가 출력되게
        // if 조건문을 만들어보자
        if (number >= 0) {
            System.out.println("자연수입니다.");

            int number2 = 7;
            System.out.println(number2);
        }

        int number2 = 30;
        System.out.println(number2);

        System.out.println("프로그램 종료");
    }
}
```

### 이클립스 - Java361 - day0304 - Ex04IfElse

```java
package day0304;
// if - else 조건문

// 우리가 if문을 단독 사용하게 되면
// 해당 조건식이 false가 나왔을 때
// 당연히 해당 조건문은 추가적인 코드 실행을 하지 않는다.
// 하지만 만약 우리가 if문의 조건식이 true가 나왔을 때
// 그리고 false가 나왔을 때 실행시킬 코드가 따로 존재한다면
// if - else 조건문을 사용하게 된다.

// if - else 조건문
// 다음과 같은 구조를 가진다.
// if(조건식) {
//      조건식이 참일 때 실행할 코드
// } else {
//      조건식이 false일 때 실행할 코드
// }
public class Ex04IfElse {
    public static void main(String[] args) {

        // 조건식에서 사용할 int 변수 선언 및 초기화
        int number = -5;

        if (number >= 0) {
            System.out.println("자연수입니다.");
        } else {
            System.out.println("자연수가 아닙니다.");
        }

        System.out.println("프로그램 종료");
    }
}
```

### 이클립스 - Java361 - day0304 - Ex05IfElseIf

```java
package day0304;
// if - else if 조건문

// if - else if 조건문에서는
// 처음 if 조건식을 체크하여
// true가 나오면 해당 코드 블락을 실행
// false 가 나오면 그 다음에 나오는 else if 조건식을 체크
// true 가 나오면 해당 코드 블락을 실행
// false 가 나오면 그 다음에 나오는 else if 조건식을 체크
// 이런식으로 진행이 된다.
// 또한 모든 조건식이 false가 나왔을 때 실행할 코드가 존재하면
// 제일 마지막에 else를 붙여서 처리해 줄수도 있다.
// 단, else 이후로는 새로운 else if가 나올 수 없다.

// if - else if 구조는 다음과 같이 이루어져 있다.

// if (조건식1) {
//      조건식1이 true일 때 실행할 코드
// } else if(조건식2) {
//      조건식2가 true일 때 실행할 코드
// } else if(조건식3) {
//      조건식3이 true일 때 실행할 코드
// } ... else {
//      위 조건식들이 모두 false일 때 실행할 코드
// }

public class Ex05IfElseIf {
    public static void main(String[] args) {

        // 조건식에서 사용할 int 변수 선언 및 초기화
        int number = 20;

        // number가 음의 정수인지
        // 0인지
        // 한자리 양의 정수인지
        // 아니면 두자리 이상의 양의 정수인지
        // 출력하는 if - else if 구조
        if (number < 0) {
            System.out.println("음의 정수입니다.");
        } else if (number == 0) {
            System.out.println("0입니다.");
        } else if (number < 10) {
            System.out.println("한자리 양의 정수입니다.");
        } else {
            System.out.println("두자리 이상의 양의 정수입니다.");
        }
    }
}
```

- (세미콜론: 해당 코드가 종료될 때 적어주는 것)
    - else if(조건식); 은 에러: 끝난게 아니기도 하고 코드 블락이 쌩뚱맞게 나와서

### 이클립스 - Java361 - day0304 - Ex06AgeChecker

```java
package day0304;
// 사용자로부터 나이를 입력받아서

// 5세 미만: 영아
// 5~13세: 어린이
// 13~18세: 청소년
// 그 외: 성인
// 이 출력되는 프로그램을 작성하시오
// 8시 25분까지

import java.util.Scanner;

public class Ex06AgeChecker {
    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        // 1. 나이를 입력 받는다.
        System.out.println("나이를 입력해주세요.");
        System.out.print("> ");
        int age = scanner.nextInt();

        // 2. if - else if 구조를 사용하여 결과를 결정한다.
        if (age < 5) {
            // 2-1. 5세 미만일 경우
            System.out.println("영아입니다.");
        } else if (age <= 13) {
            // 2-2. 13세 이하일 경우
            System.out.println("어린이입니다.");
        } else if (age <= 18) {
            // 2-3. 18세 이하일 경우
            System.out.println("청소년입니다.");
        } else {
            // 그 외: 성인
            System.out.println("성인입니다.");
        }
    }
}
```

### 이클립스 - Java361 - day0304 - Ex07GradeChecker

```java
package day0304;
// 사용자로부터 점수를 입력받아서

// 90점 이상: A
// 80점대: B
// 70점대: C
// 60점대: D
// 그 외: F
// 가 출력되는 프로그램을 작성해보세요.
// 8시 50분까지

import java.util.Scanner;

public class Ex07GradeChecker {
    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        // 1. 점수를 입력 받는다.
        System.out.println("점수를 입력해주세요.");
        System.out.print("> ");
        int score = scanner.nextInt();

        // 2. 점수에 따라서 결과를 출력한다.
        if (score >= 90) {
            // 2-1. 입력한 점수가 90 이상이므로 A를 출력한다.
            System.out.println("A");
        } else if (score >= 80) {
            // 2-2. 입력한 점수가 80대이므로 B를 출력한다.
            System.out.println("B");
        } else if (score >= 70) {
            // 2-3. 입력한 점수가 70대이므로 C를 출력한다.
            System.out.println("C");
        } else if (score >= 60) {
            // 2-4. 입력한 점수가 60대이므로 D를 출력한다.
            System.out.println("D");
        } else {
            // 2-5. 그 외는 F를 출력한다.
            System.out.println("F");
        }
    }
}
```

### 이클립스 - Java361 - day0304 - Ex08BmiChecker

```java
package day0304;
// 사용자로부터 이름, 나이, 키, 몸무게를 차례대로 입력받아서

// 다음과 같은 형식으로 출력되게 프로그램을 작성하시오

// 결과))))
// 이름: ### 나이: 0##세
// 키: #.##M 몸무게: 0##.##kg
// BMI: ##.## 비만도: ###

// BMI 계산 공식은
// 몸무게(kg 단위) / 키(m 단위) / 키(m 단위) 입니다.
// *(m단위라 1.몇 이렇게 입력해야 함)*

// BMI에 따른 비만도는
// ~18.5 미만: 저체중
// 18.5 이상 23 미만: 정상 체중
// 23 이상 25 미만: 과체중
// 25 이상: 비만
// 입니다.

// 9시 25분까지

import java.util.Scanner;

public class Ex08BmiChecker {
    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        // 이름 입력
        System.out.println("이름을 입력해주세요.");
        System.out.print("> ");
        String name = scanner.nextLine();

        // 나이 입력
        System.out.println("나이를 입력해주세요.");
        System.out.print("> ");
        int age = scanner.nextInt();

        // 키 입력
        System.out.println("키를 입력해주세요.");
        System.out.print("> ");
        double height = scanner.nextDouble();

        // 몸무게 입력
        System.out.println("몸무게를 입력해주세요.");
        System.out.print("> ");
        double weight = scanner.nextDouble();

        // 출력
        // 이름: ### 나이: 0##세 출력
        System.out.printf("이름: %s 나이: %03d세\n", name, age);
        // 키: #.##M 몸무게: 0##.##kg 출력
        System.out.printf("키: %.2fM 몸무게: %06.2fkg\n", height, weight);
        // BMI: ##.## 비만도: ### 출력
        double bmi = weight / height / height;
        System.out.printf("BMI: %.2f 비만도: ", bmi);

        // 비만도 결과값 출력
        if (bmi < 18.5) {
            System.out.println("저체중");
        } else if (bmi < 23) {
            System.out.println("정상 체중");
        } else if (bmi < 25) {
            System.out.println("과체중");
        } else {
            System.out.println("비만");
        }
    }
}
```

### 이클립스 - Java361 - day0304 - Ex09ResultChecker

```java
package day0304;
// 사용자로부터 국어 영어 수학 점수를 입력 받아서

// 검정고시 결과를 출력해주는 프로그램을 작성하시오

// 검정고시의 경우 만약 평균이 70미만이거나 혹은
// 한 과목이라도 60점 미만일 경우 탈락이 됩니다.

// 예시: 50 50 50 -> 탈락
//      80 80 80 -> 합격
//      100 100 20 -> 탈락

import java.util.Scanner;

public class Ex09ResultChecker {
    public static void main(String[] args) {

        // 프로그램에서 사용할 상수들*(조건이 바뀌어도 코드 안 찾아도 되게: 유연한 코드)*
        *// 상수: final 데이터타입 변수명(대문자) = 값;*
        // 1. 통과 기준의 총점
        final int SUM_MINIMUM = 210;
        // 2. 통과 기준의 개별 점수
        final int SCORE_MINIMUM = 60;

        Scanner scanner = new Scanner(System.in);

        // 국어 점수 입력
        System.out.println("국어 점수를 입력해주세요.");
        System.out.print("> ");
        int korean = scanner.nextInt();

        // 영어 점수 입력
        System.out.println("영어 점수를 입력해주세요.");
        System.out.print("> ");
        int english = scanner.nextInt();

        // 수학 점수 입력
        System.out.println("수학 점수를 입력해주세요.");
        System.out.print("> ");
        int math = scanner.nextInt();

        // 탈락 조건 1.
        // 평균이 70 미만일 경우*((A+B+C)/3 = 70)* -> 총점이 210 미만일 경우
        // 탈락 조건 2.
        // 국어 점수가 60점 미만일 경우
        // 탈락 조건 3.
        // 영어 점수가 60점 미만일 경우
        // 탈락 조건 4.
        // 수학 점수가 60점 미만일 경우
        *// (조건 중 하나라도 만족하면 탈락: OR 연산자)*

        // 총점을 계산하여 변수에 저장
        int sum = korean + english + math;

        if (sum < SUM_MINIMUM || korean < SCORE_MINIMUM || english < SCORE_MINIMUM || math < SCORE_MINIMUM) {
            System.out.println("탈락입니다.");
        } else {
            System.out.println("합격입니다.");
        }
    }
}
```

## 추가: 이클립스 단축키 등, 깃 히스토리와 커밋 취소

- 단축키
    - 들여쓰기 중요, 자동으로 들여쓰기: `Ctrl + Shift + f`
    - *`Ctrl + Shift + 방향키`: 선택 많이 됨*
    - *화면분할*
        - `*세로: Ctrl + Shift + {*`
        - *`가로: Ctrl + Shift + -`*
- 이클립스에서
    - *중괄호 누르면 알아서 짝을 찾아줌*
    - *새창: [Window] - [new Window]*
    - *왼쪽 창에 있는 패키지나 클래스 모음을 모르고 껐을 때: [Window] - [Show View] - [Package Explorer]*
- *깃에 올린건 History를 보고 commit을 취소할 수 있다.(너무 망한 경우나 잘못 올린 경우에만 취소하는 게 나을 듯)*
