package day0308;
// for 반복문

// for 반복문이나 while 반복문이나
// 모두 코드를 반복시키는게 목적이다.
// 하지만 반복 횟수와 연관이 적은 편인 while 반복문과는 다르게
// for 반복문은 좀 더 횟수와 연관이 있는 반복문이다.

// for 반복문은 다음과 같은 구조로 이루어진다.
// for (제어변수의 선언과 초기화; 반복 조건식; 코드 실행 후 제어변수의 변화식) {
//      반복할 코드
// }

public class Ex05For {

    public static void main(String[] args) {

        // 1부터 4까지 차례대로 출력하는 for 반복문
        for (int i = 1; i <= 4; i++) {
            System.out.println(i);
        }
        // 위의 for 반복문은 다음과 같은 순서를 거친다.
        // 1. int i = 1; 이 실행되서 i의 현재 값이 1이 된다.
        // 2. i <= 4; 가 실행되는데 i의 현재 값이 1이므로 true가 나온다.
        // 3. 조건식이 true가 나왔으므로 반복할 코드인 System.out.println(i)가 실행 돼서
        // 화면에 1이 출력된다.
        // 4. 더이상 반복시킬 코드가 없으므로 변화식인 i++이 실행 돼서 i의 현재 값이 2가 된다.
        // 5. i <= 4; 가 실행되는데 i의 현재 값이 2이므로 true가 나온다.
        // 6. 조건식이 true가 나왔으므로 반복할 코드인 System.out.println(i)가 실행 돼서
        // 화면에 2가 출력된다.
        // 7. 더이상 반복시킬 코드가 없으므로 변화식인 i++이 실행 돼서 i의 현재 값이 3이 된다.
        // 8. i <= 4; 가 실행되는데 i의 현재 값이 3이므로 true가 나온다.
        // 9. 조건식이 true가 나왔으므로 반복할 코드인 System.out.println(i)가 실행 돼서
        // 화면에 3이 출력된다.
        // 10. 더이상 반복시킬 코드가 없으므로 변화식인 i++이 실행 돼서 i의 현재 값이 4가 된다.
        // 11. i <= 4; 가 실행되는데 i의 현재 값이 4이므로 true가 나온다.
        // 12. 조건식이 true가 나왔으므로 반복할 코드인 System.out.println(i)가 실행 돼서
        // 화면에 4가 출력된다.
        // 13. 더이상 반복시킬 코드가 없으므로 변화식인 i++이 실행 돼서 i의 현재 값이 5가 된다.
        // 14. i <= 4; 가 실행되는데 i의 현재 값이 5이므로 false가 나와서 for 반복문이 종료된다.

        // for 반복문에 관한 몇가지 팁들
        // 1. 제어변수의 초기화나 조건식에 다른 변수가 들어갈 수도 있다.
        int start = 3;
        int end = 7;

        for (int i = start; i <= end; i++) {
            System.out.println(i);
        }

        // 2. 제어변수는 정말로 변수이다. 다만 유효 범위는 해당 for문 안이 된다.
        for (int i = 1; i <= 3; i++) {
            System.out.println(i);
        }

        // 3. 만약 처음부터 반복 조건식이 false가 나오면
        // while문과 마찬가지로 코드는 처음부터 실행되지 않는다.
        for (int i = 1; i < 0; i++) {
            System.out.println("실행될까?");
        }

        // 4. 제어변수의 변화식은 ++, -- 뿐만이 아니라 다른 할당 연산자를 사용할 수도 있다.
        for (int i = 1; i < 5000; i *= 100) {
            System.out.println(i);
        }

        // 5. 제어변수의 선언과 초기화, 조건식, 변화식을 모두 for문의 ()에서
        // 분리시킬 수도 있지만 이 방법은 최대한 사용을 자제하는 것이 좋다.
        // 단, 분리되더라도 ;의 개수는 반드시 () 안에 2개가 있어야 한다.
        int i = 11;

        for (;;) {

            if (i > 13) {
                break;
            }

            System.out.println(i);

            i++;
        }
    }
}
